---
import DocsLayout from '@/layouts/DocsLayout.astro';
import { getCollection } from 'astro:content';
import { Card, CardContent } from '@/components/ui/display/card';

// Fetch all component docs from content collection
const components = await getCollection('components');

// Helper to format slug into Title Case if title is missing
const toTitle = (str: string) => str
  .split('-')
  .map((w) => w.charAt(0).toUpperCase() + w.slice(1))
  .join(' ');

// Prepare items with href, title, and optional description
const items = components
  .map((entry) => ({
    href: `/docs/components/${entry.slug}`,
    title: entry.data.title ?? toTitle(entry.slug),
    description: entry.data.description ?? '',
  }))
  .sort((a, b) => a.title.localeCompare(b.title, undefined, { sensitivity: 'base' }));
---

<DocsLayout
    title="Components"
    description="Explore our comprehensive UI component library built with Astro and Alpine.js"
    slug="components"
>
    <div class="not-prose">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {items.map((item) => (
                <a
                    href={item.href}
                    class="block group focus:outline-none focus:ring-2 focus:ring-primary rounded-lg"
                >
                    <Card class="h-full transition-colors group-hover:border-primary group-hover:shadow-sm">
                        <CardContent class="p-4">
                            <h3 class="font-semibold text-foreground mb-1">{item.title}</h3>
                            {item.description && (
                                <p class="text-sm text-muted-foreground line-clamp-2">
                                    {item.description}
                                </p>
                            )}
                        </CardContent>
                    </Card>
                </a>
            ))}
        </div>
    </div>
</DocsLayout>
