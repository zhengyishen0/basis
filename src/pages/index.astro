---
import SiteLayout from '@/layouts/SiteLayout.astro';
import { getEntry } from 'astro:content';

// UI Components for better styling
import Badge from '@/components/ui/feedback/Badge.astro';
import Button from '@/components/ui/forms/Button.astro';
import {
    Card,
    CardHeader,
    CardContent,
    CardFooter,
} from '@/components/ui/display/card';
import Text from '@/components/ui/display/Text.astro';
import { Column, Row, Section, Page } from '@/components/ui/layout';

// Component showcase imports
import Calendar from '@/components/ui/display/Calendar.astro';
import Tabs from '@/components/ui/navigation/tabs/Tabs.astro';
import TabsList from '@/components/ui/navigation/tabs/TabsList.astro';
import TabsTrigger from '@/components/ui/navigation/tabs/TabsTrigger.astro';
import TabsContent from '@/components/ui/navigation/tabs/TabsContent.astro';
import VideoPlayer from '@/components/ui/display/VideoPlayer.astro';
import {
    Accordion,
    AccordionItem,
    AccordionTrigger,
    AccordionContent,
} from '@/components/ui/display/accordion';
import {
    RadioGroup,
    RadioGroupItem,
    RadioGroupLabel,
} from '@/components/ui/forms/radiogroup';
import {
    Command,
    CommandFooter,
    CommandGroups,
    CommandItems,
    CommandShortcut,
    CommandInput,
    CommandTrigger,
} from '@/components/ui/overlay/command';
import MenuContainer from '@/components/ui/overlay/menu/MenuContainer.astro';
import Image from '@/components/ui/display/Image.astro';

// Import hero image for card demo
import heroImage from '@/assets/hero-image.png';

// Import GitHub icon
import githubIconUrl from '@/assets/github-icon-white.svg?url';

// Import essential styles
const homeContent = await getEntry('pages', 'home');
const pageData = JSON.stringify(homeContent?.data || []);

const commandItems = {
    suggestions: [
        {
            title: 'Calendar',
            value: 'calendar',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"/></svg>',
            show: true,
            shortcut: '⌘C',
        },
        {
            title: 'Search Emoji',
            value: 'emoji',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M8 14s1.5 2 4 2 4-2 4-2"/><path d="M9 9h.01M15 9h.01"/></svg>',
            show: true,
            shortcut: '⌘E',
        },
        {
            title: 'Calculator',
            value: 'calculator',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="16" height="20" x="4" y="2" rx="2"/><line x1="8" x2="16" y1="6" y2="6"/><line x1="16" x2="16" y1="14" y2="18"/><path d="m9 10-1 4h1.5l.5-2h1l.5 2H13l-1-4zm3 0h1v4h-1v-4z"/></svg>',
            show: true,
            shortcut: '⌘Q',
        },
    ],
    settings: [
        {
            title: 'Profile',
            value: 'profile',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>',
            shortcut: '⌘P',
            show: true,
        },
        {
            title: 'Billing',
            value: 'billing',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="20" height="14" x="2" y="5" rx="2"/><line x1="2" x2="22" y1="10" y2="10"/></svg>',
            shortcut: '⌘B',
        },
        {
            title: 'Settings',
            value: 'settings',
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"/><circle cx="12" cy="12" r="3"/></svg>',
            shortcut: '⌘S',
            show: true,
        },
    ],
};

const commandItemsJson = JSON.stringify(commandItems);
---

<SiteLayout>
    <Page class="min-h-screen" x-data={pageData}>
        <!-- Hero Section -->
        <Section
            class="text-center py-4 px-4 bg-gradient-to-br from-muted/30 via-background to-muted/10 relative overflow-hidden min-h-[60vh] flex flex-col justify-center items-center gap-6"
        >
            <Text
                variant="hero-title"
                class="relative z-10 drop-shadow-sm tracking-tight"
            >
                <span class="relative group">
                    Basis UI
                    <span
                        class="absolute bottom-[-8px] left-[-5%] w-[110%] h-[5px] bg-primary rounded-full origin-left scale-x-0 opacity-0 group-hover:scale-x-100 group-hover:opacity-100 transition-all duration-700 ease-out"
                    ></span>
                </span>
            </Text>
            <Text
                variant="hero-description"
                class="max-w-2xl mx-auto relative z-10"
            >
                Build on Fundamentals - A methodology for modern web development
                using basic tools and clear boundaries
            </Text>
            <Row class="flex justify-center gap-2 flex-wrap">
                <Badge size="sm" variant="secondary">Astro</Badge>
                <Badge size="sm" variant="secondary">Alpine</Badge>
                <Badge size="sm" variant="secondary">Supabase</Badge>
            </Row>
            <Row class="flex justify-center gap-4">
                <Button href="/docs" size="lg"> Get Started </Button>
                <Button href="/components" size="lg" variant="ghost"
                    >Components</Button
                >
            </Row>
        </Section>

        <!-- Component Showcase Section -->
        <Section class="mx-auto py-16 px-4 bg-muted/30">
            <div class="text-center mb-12">
                <Text variant="section-title" class="mb-4"
                    >Component Showcase</Text
                >
                <Text
                    variant="body"
                    class="text-muted-foreground max-w-2xl mx-auto"
                >
                    Explore our comprehensive UI component library built for
                    modern web development
                </Text>
            </div>

            <!-- Masonry-style tile grid -->
            <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 max-w-7xl mx-auto auto-rows-min">
                
                <!-- Calendar Component Tile (Large - 2x2 on lg, 2x1 on md, full width on sm) -->
                <div class="col-span-2 lg:col-span-2 bg-gradient-to-br from-blue-50/50 to-indigo-50/50 dark:from-blue-950/20 dark:to-indigo-950/20 p-6 rounded-2xl border border-blue-100/50 dark:border-blue-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <div class="mb-3">
                        <Text variant="body" class="font-medium text-sm text-blue-700 dark:text-blue-300 mb-1">Calendar</Text>
                        <Text variant="body" class="text-xs text-blue-600/70 dark:text-blue-400/70">Interactive date selection</Text>
                    </div>
                    <Calendar size="lg" numberOfMonths={1} mode="range" />
                </div>

                <!-- Command Palette (Wide - spans 2 cols) -->
                <div
                    x-data={`{
                                commandSearch: '',
                                commandActiveIndex: 0,
                                commandItems: ${commandItemsJson}
                            }`}
                    class="col-span-2 lg:col-span-2 bg-gradient-to-br from-purple-50/50 to-pink-50/50 dark:from-purple-950/20 dark:to-pink-950/20 p-6 rounded-2xl border border-purple-100/50 dark:border-purple-800/30 shadow-sm hover:shadow-md transition-all duration-300"
                >
                    <div class="mb-4">
                        <Text variant="body" class="font-medium text-sm text-purple-700 dark:text-purple-300 mb-1">Command Palette</Text>
                        <Text variant="body" class="text-xs text-purple-600/70 dark:text-purple-400/70">Quick action menu</Text>
                    </div>
                    <MenuContainer
                        items={commandItems}
                        searchEnabled={true}
                        keyboardNav={false}
                        searchModel="commandSearch"
                        activeModel="commandActiveIndex"
                        itemsModel="commandItems"
                        onSelect="alert('Selected: ' + item.title)"
                        variant="default"
                        size="lg"
                        class="w-full"
                    >
                        <CommandInput
                            slot="input"
                            placeholder="Type a command..."
                        />
                        <CommandGroups
                            x-for="[categoryName, categoryItems] in Object.entries(filteredItems)"
                            x-key="categoryName"
                            x-text="categoryName.charAt(0).toUpperCase() + categoryName.slice(1)"
                            showDivider={true}
                        >
                            <CommandItems
                                x-for="item in categoryItems"
                                x-key="item.value"
                            >
                                <div
                                    slot="icon"
                                    class="mr-2 h-4 w-4 shrink-0"
                                    x-html="item.icon"
                                >
                                </div>
                                <span x-text="item.title"></span>
                                <CommandShortcut
                                    slot="shortcut"
                                    x-text="item.shortcut"
                                />
                            </CommandItems>
                        </CommandGroups>
                        <CommandFooter slot="footer" />
                    </MenuContainer>
                </div>

                <!-- Video Player (Wide - spans 2 cols) -->
                <div class="col-span-2 lg:col-span-2 bg-gradient-to-br from-green-50/50 to-emerald-50/50 dark:from-green-950/20 dark:to-emerald-950/20 p-6 rounded-2xl border border-green-100/50 dark:border-green-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <div class="mb-4">
                        <Text variant="body" class="font-medium text-sm text-green-700 dark:text-green-300 mb-1">Video Player</Text>
                        <Text variant="body" class="text-xs text-green-600/70 dark:text-green-400/70">Rich media playback</Text>
                    </div>
                    <VideoPlayer youtubeId="jfKfPfyJRdk" shape="rounded" />
                </div>

                <!-- Accordion (Card container, regular size) -->
                <Card class="col-span-2 md:col-span-2 lg:col-span-2 p-6 bg-gradient-to-br from-amber-50/50 to-orange-50/50 dark:from-amber-950/20 dark:to-orange-950/20 border border-amber-100/50 dark:border-amber-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <CardHeader class="pb-4">
                        <Text variant="card-title" class="text-amber-700 dark:text-amber-300">Accordion</Text>
                        <Text
                            variant="body"
                            class="text-sm text-amber-600/70 dark:text-amber-400/70"
                        >
                            Collapsible content sections
                        </Text>
                    </CardHeader>
                    <CardContent class="flex-1">
                        <Accordion maxWidth="full" centered={false}>
                            <AccordionItem>
                                <AccordionTrigger
                                    >What is Basis?</AccordionTrigger
                                >
                                <AccordionContent>
                                    A modern web development methodology using
                                    Astro, Alpine.js, and Supabase.
                                </AccordionContent>
                            </AccordionItem>
                            <AccordionItem>
                                <AccordionTrigger
                                    >Why choose Basis?</AccordionTrigger
                                >
                                <AccordionContent>
                                    Simple, fast, and built on fundamentals.
                                </AccordionContent>
                            </AccordionItem>
                        </Accordion>
                    </CardContent>
                </Card>

                <!-- Radio Group (Card container, regular size) -->
                <Card class="col-span-2 md:col-span-2 lg:col-span-2 p-6 bg-gradient-to-br from-rose-50/50 to-pink-50/50 dark:from-rose-950/20 dark:to-pink-950/20 border border-rose-100/50 dark:border-rose-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <CardHeader class="pb-4">
                        <Text variant="card-title" class="text-rose-700 dark:text-rose-300">Radio Group</Text>
                        <Text
                            variant="body"
                            class="text-sm text-rose-600/70 dark:text-rose-400/70"
                        >
                            Single selection options
                        </Text>
                    </CardHeader>
                    <CardContent class="flex-1 space-y-4">
                        <RadioGroup
                            name="plan"
                            selectedOption="basic"
                            orientation="vertical"
                        >
                            <RadioGroupItem value="basic">
                                <RadioGroupLabel>Basic Plan</RadioGroupLabel>
                            </RadioGroupItem>
                            <RadioGroupItem value="pro">
                                <RadioGroupLabel>Pro Plan</RadioGroupLabel>
                            </RadioGroupItem>
                            <RadioGroupItem value="enterprise">
                                <RadioGroupLabel>Enterprise</RadioGroupLabel>
                            </RadioGroupItem>
                        </RadioGroup>
                    </CardContent>
                </Card>

                <!-- Tabs Component (Card container, medium size) -->
                <Card class="col-span-2 md:col-span-2 lg:col-span-2 p-6 bg-gradient-to-br from-indigo-50/50 to-blue-50/50 dark:from-indigo-950/20 dark:to-blue-950/20 border border-indigo-100/50 dark:border-indigo-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <CardHeader class="pb-4">
                        <Text variant="card-title" class="text-indigo-700 dark:text-indigo-300">Tabs</Text>
                        <Text
                            variant="body"
                            class="text-sm text-indigo-600/70 dark:text-indigo-400/70"
                        >
                            Organized content navigation
                        </Text>
                    </CardHeader>
                    <CardContent class="flex-1">
                        <Tabs defaultValue="tab1">
                            <TabsList slot="list" variant="pills" class="mb-4">
                                <TabsTrigger value="tab1">Home</TabsTrigger>
                                <TabsTrigger value="tab2">About</TabsTrigger>
                                <TabsTrigger value="tab3">Contact</TabsTrigger>
                            </TabsList>
                            <TabsContent value="tab1" preview class="h-32">
                                Welcome to the home tab
                            </TabsContent>
                            <TabsContent value="tab2" preview class="h-32">
                                Learn more about us
                            </TabsContent>
                            <TabsContent value="tab3" preview class="h-32">
                                Get in touch with us
                            </TabsContent>
                        </Tabs>
                    </CardContent>
                </Card>

                <!-- Hero Card (smaller size for visual balance) -->
                <Card variant="outline" class="col-span-2 md:col-span-2 lg:col-span-2 p-6 bg-gradient-to-br from-slate-50/50 to-gray-50/50 dark:from-slate-950/20 dark:to-gray-950/20 border border-slate-100/50 dark:border-slate-800/30 shadow-sm hover:shadow-md transition-all duration-300">
                    <Image
                        src="https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&w=800&q=80"
                        alt="Hero preview"
                        shape="rounded"
                        aspectRatio="16/9"
                    />
                    <CardHeader class="pb-2">
                        <Text variant="body" class="font-semibold text-sm text-slate-700 dark:text-slate-300">
                            Modern Development
                        </Text>
                    </CardHeader>
                    <CardContent class="pb-2">
                        <Text
                            variant="body"
                            class="text-xs text-slate-600/70 dark:text-slate-400/70"
                        >
                            Build with our component library.
                        </Text>
                    </CardContent>
                    <CardFooter justify="end">
                        <Button size="sm" variant="default">Learn More</Button>
                    </CardFooter>
                </Card>
            </div>
        </Section>
    </Page>
</SiteLayout>

<style>
  /* Enhanced masonry grid with better responsive behavior */
  .masonry-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1rem;
    grid-auto-rows: min-content;
    align-items: start;
  }
  
  @media (min-width: 768px) {
    .masonry-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .masonry-grid {
      grid-template-columns: repeat(6, 1fr);
      gap: 1rem;
    }
  }
  
  /* Ensure tiles have proper minimum heights and hover effects */
  .masonry-tile {
    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, box-shadow;
  }
  
  .masonry-tile:hover {
    transform: translateY(-2px);
  }
  
  /* Component-specific styling adjustments */
  .component-tile-calendar .calendar-container {
    transform: scale(0.95);
    transform-origin: top left;
  }
  
  .component-tile-video {
    overflow: hidden;
  }
  
  .component-tile-command {
    max-height: 400px;
    overflow: hidden;
  }
</style>
