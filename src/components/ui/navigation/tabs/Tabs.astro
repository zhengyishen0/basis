---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';
import { semanticVariants, sizes, overflowVariants } from '@/lib/component-variants';

const tabsVariants = cva('w-full flex gap-2', {
    variants: {
        orientation: {
            horizontal: 'flex-col',
            vertical: 'flex-row',
        },
        variant: semanticVariants,
        size: sizes,
        overflow: overflowVariants
    }
});

export interface Props extends VariantProps<typeof tabsVariants> {
    defaultValue?: string;
    class?: string;
    [key: string]: any; // Alpine.js pass-through
}

const {
    defaultValue,
    orientation = 'horizontal',
    variant = 'default',
    size = 'md',
    overflow = 'fixed',
    class: className,
    ...alpineProps
} = Astro.props;

---

<div
    x-data={`{
    selectedTab: '${defaultValue}',
    orientation: '${orientation}'
  }`}
    class={cn(
        tabsVariants({
            orientation,
            variant,
            size,
            overflow,
        }),
        className
    )}
    data-orientation={orientation}
    {...alpineProps}
>
    <slot />
</div>
