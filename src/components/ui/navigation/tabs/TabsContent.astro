---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';
import { sizes, overflowVariants } from '@/lib/component-variants';

const tabsContentVariants = cva(
  'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
  {
    variants: {
      variant: {
        default: '',
        card: 'rounded-md border border-border bg-card p-6',
        padded: 'p-4'
      },
      size: sizes,
      overflow: overflowVariants
    }
  }
);

export interface Props extends VariantProps<typeof tabsContentVariants> {
  value: string;
  variant?: 'default' | 'card' | 'padded';
  class?: string;
  [key: string]: any; // Alpine.js pass-through
}

const {
  value,
  variant = 'default',
  size = 'md',
  overflow = 'fixed',
  class: className,
  ...alpineProps
} = Astro.props;
---

<div
  x-show={`selectedTab === '${value}'`}
  x-cloak
  class={cn(
    tabsContentVariants({ variant, size, overflow }),
    className
  )}
  role="tabpanel"
  aria-labelledby={`trigger-${value}`}
  id={`content-${value}`}
  tabindex="0"
  data-value={value}
  {...alpineProps}
>
  <slot />
</div>