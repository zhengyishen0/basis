---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';
import { ChevronRight } from 'lucide-astro';

const subTriggerVariants = cva(
    'relative flex cursor-default select-none items-center justify-between w-full rounded-sm px-3 py-2 text-sm outline-none transition-colors',
    {
        variants: {
            variant: {
                default:
                    'hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground',
                destructive:
                    'text-destructive hover:bg-destructive hover:text-destructive-foreground focus:bg-destructive focus:text-destructive-foreground',
            },
        },
        defaultVariants: {
            variant: 'default',
        },
    }
);

export interface Props extends VariantProps<typeof subTriggerVariants> {
    className?: string;
    [key: string]: any;
}

const { variant = 'default', className, ...alpineProps } = Astro.props;
---

<div
    x-ref="submenuTrigger"
    data-menu-item
    @mouseenter="
        const content = $el.closest('[role=menu]');
        if (content) {
            content.activeIndex = Array.from(content.querySelectorAll('[data-menu-item]')).indexOf($el);
        }
        $dispatch('open-submenu')
    "
    :data-active="
        (() => {
            const content = $el.closest('[role=menu]');
            if (!content || typeof content.activeIndex === 'undefined') return false;
            return content.activeIndex === Array.from(content.querySelectorAll('[data-menu-item]')).indexOf($el);
        })()
    "
    class={cn(
        subTriggerVariants({ variant }),
        'data-[active=true]:bg-accent data-[active=true]:text-accent-foreground',
        className
    )}
    role="menuitem"
    aria-haspopup="true"
    :aria-expanded="false"
    tabindex="-1"
    {...alpineProps}
>
    <slot />
    <ChevronRight class="h-4 w-4" />
</div>