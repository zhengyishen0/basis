---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';

const triggerVariants = cva(
    'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1.5 text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',
    {
        variants: {
            variant: {
                default: 'hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',
                ghost: 'hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',
            },
        },
        defaultVariants: { variant: 'default' },
    }
);

export interface Props extends VariantProps<typeof triggerVariants> {
    className?: string;
    [key: string]: any;
}

const { variant = 'default', className, ...alpineProps } = Astro.props;
---

<div
    @click="toggle($event)"
    :data-state="open ? 'open' : 'closed'"
    :aria-expanded="open"
    :aria-controls="menuBarId + '-content'"
    class={cn(triggerVariants({ variant }), className)}
    {...alpineProps}
>
    <slot />
</div>