---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';

const contentVariants = cva(
    'absolute z-popover bg-popover text-popover-foreground border border-border rounded-lg shadow-md outline-none',
    {
        variants: {
            placement: {
                top: 'bottom-full mb-2 left-1/2 -translate-x-1/2',
                bottom: 'top-full mt-2 left-1/2 -translate-x-1/2',
                left: 'right-full mr-2 top-1/2 -translate-y-1/2',
                right: 'left-full ml-2 top-1/2 -translate-y-1/2',
                'top-start': 'bottom-full mb-2 left-0',
                'top-end': 'bottom-full mb-2 right-0',
                'bottom-start': 'top-full mt-2 left-0',
                'bottom-end': 'top-full mt-2 right-0',
                'left-start': 'right-full mr-2 top-0',
                'left-end': 'right-full mr-2 bottom-0',
                'right-start': 'left-full ml-2 top-0',
                'right-end': 'left-full ml-2 bottom-0',
            },
            size: {
                sm: 'w-64 p-3',
                md: 'w-80 p-4',
                lg: 'w-96 p-6',
            },
        },
        defaultVariants: { placement: 'bottom', size: 'md' },
    }
);

export interface Props extends VariantProps<typeof contentVariants> {
    className?: string;
    [key: string]: any;
}

const { placement = 'bottom', size = 'md', className, ...alpineProps } = Astro.props;
---

<div
    x-show="visible"
    x-transition:enter="ease-out duration-200"
    x-transition:enter-start="opacity-0 scale-95"
    x-transition:enter-end="opacity-100 scale-100"
    x-transition:leave="ease-in duration-150"
    x-transition:leave-start="opacity-100 scale-100"
    x-transition:leave-end="opacity-0 scale-95"
    @mouseenter="keepOpen()"
    @mouseleave="hide()"
    :id="hovercardId"
    class={cn(contentVariants({ placement, size }), 'hovercard-content', className)}
    style="display: none;"
    role="dialog"
    {...alpineProps}
>
    <slot />
</div>