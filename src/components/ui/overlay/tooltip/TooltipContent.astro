---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';

const contentVariants = cva(
    'absolute z-tooltip px-2 py-1 text-xs rounded shadow-lg',
    {
        variants: {
            placement: {
                top: 'bottom-full mb-1 left-1/2 -translate-x-1/2',
                bottom: 'top-full mt-1 left-1/2 -translate-x-1/2',
                left: 'right-full mr-1 top-1/2 -translate-y-1/2',
                right: 'left-full ml-1 top-1/2 -translate-y-1/2',
            },
            theme: {
                dark: 'bg-gray-900 text-white',
                light: 'bg-white text-gray-900 border border-gray-200',
            },
        },
        defaultVariants: { placement: 'top', theme: 'dark' },
    }
);

export interface Props extends VariantProps<typeof contentVariants> {
    className?: string;
    [key: string]: any;
}

const { placement = 'top', theme = 'dark', className, ...alpineProps } = Astro.props;
---

<div
    x-show="visible"
    x-transition:enter="ease-out duration-200"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="ease-in duration-150"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    :id="tooltipId"
    class={cn(contentVariants({ placement, theme }), 'tooltip-content', className)}
    style="display: none;"
    role="tooltip"
    {...alpineProps}
>
    <slot />
</div>