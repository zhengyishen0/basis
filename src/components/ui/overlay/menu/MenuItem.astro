---
import { cn } from '@/lib/utils';
import { cva, type VariantProps } from 'class-variance-authority';

const menuItemVariants = cva(
  'relative flex cursor-default select-none items-center rounded-sm text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground',
  {
    variants: {
      variant: {
        default: 'px-3 py-2 min-w-48 text-left',
        command: 'px-2 py-1.5'
      }
    },
    defaultVariants: {
      variant: 'default'
    }
  }
);

export interface Props extends VariantProps<typeof menuItemVariants> {
    shortcut?: string;
    className?: string;
    disabled?: boolean;
    activeModel?: string;  // 'activeIndex' or 'commandActiveIndex'
    role?: 'menuitem' | 'option' | 'button';
    onSelect?: string;     // Click handler
    [key: string]: any;
}

const {
    shortcut,
    disabled = false,
    className,
    variant = 'default',
    activeModel = 'activeIndex',
    role = 'menuitem',
    onSelect,
    ...alpineProps
} = Astro.props;

// Extract x-for, x-key, and x-text from alpineProps
const { 'x-for': xFor, 'x-key': xKey, 'x-text': xText, ...restProps } = alpineProps;
---

{
  xFor ? (
    <template x-for={xFor} x-key={xKey}>
        <div
            data-menu-item
            x-init="$el.itemData = item"
            @mouseenter={`
              const container = $el.closest('[x-data]');
              if (container && container.flattenedItems) {
                container.${activeModel} = container.flattenedItems.findIndex(flatItem => flatItem === $el.itemData);
              }
            `}
            @click={onSelect}
            :aria-disabled="item && item.disabled"
            :class={`${JSON.stringify(cn(menuItemVariants({ variant }), className))} + (item && item.disabled ? ' pointer-events-none opacity-50' : '') + ((typeof ${activeModel} !== 'undefined' && typeof flattenedItems !== 'undefined' && ${activeModel} === flattenedItems.findIndex(flatItem => flatItem === item)) ? ' bg-accent text-accent-foreground' : '')`}
            role={role}
            tabindex="-1"
            {...restProps}
        >
            <slot name="icon" />
            {xText && <span x-text={xText}></span>}
            <slot />
            <slot name="shortcut" />
        </div>
    </template>
  ) : (
    <div
        data-menu-item
        @mouseenter={`
          const container = $el.closest('[x-data]');
          if (container) {
            container.${activeModel} = Array.from(container.querySelectorAll('[data-menu-item]')).indexOf($el);
          }
        `}
        @click={onSelect}
        :aria-disabled={disabled}
        :class={`
          ${JSON.stringify(cn(menuItemVariants({ variant }), disabled && 'pointer-events-none opacity-50', className))} + 
          ((typeof ${activeModel} !== 'undefined' && $el.parentElement && ${activeModel} === Array.from($el.parentElement.querySelectorAll('[data-menu-item]')).indexOf($el)) ? ' bg-accent text-accent-foreground' : '')
        `}
        role={role}
        tabindex="-1"
        {...restProps}
    >
        <slot name="icon" />
        {xText && <span x-text={xText}></span>}
        <slot />
        <slot name="shortcut" />
    </div>
  )
}