---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';

const itemVariants = cva(
    'relative flex cursor-default select-none items-center rounded-sm px-3 py-2 text-sm outline-none transition-colors',
    {
        variants: {
            variant: {
                default: 'hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground',
                destructive: 'text-destructive hover:bg-destructive hover:text-destructive-foreground focus:bg-destructive focus:text-destructive-foreground',
            },
            disabled: {
                true: 'pointer-events-none opacity-50',
                false: '',
            },
        },
        defaultVariants: {
            variant: 'default',
            disabled: false,
        },
    }
);

export interface Props extends VariantProps<typeof itemVariants> {
    shortcut?: string;
    className?: string;
    disabled?: boolean;
    [key: string]: any;
}

const {
    variant = 'default',
    shortcut,
    disabled = false,
    className,
    ...alpineProps
} = Astro.props;

// Extract x-for and x-key from alpineProps so they don't get passed to the div
const { 'x-for': xFor, 'x-key': xKey, ...restProps } = alpineProps;
---

{
  xFor ? (
    <template x-for={xFor} x-key={xKey}>
        <div
            data-context-menu-item
            @mouseenter="!item.disabled && (activeIndex = Array.from($el.closest('[role=menu]').querySelectorAll('[data-context-menu-item]')).indexOf($el))"
            :data-active="activeIndex === Array.from($el.closest('[role=menu]').querySelectorAll('[data-context-menu-item]')).indexOf($el)"
            :aria-disabled="item.disabled"
            class={cn(
                itemVariants({ variant, disabled: false }),
                'data-[active=true]:bg-accent data-[active=true]:text-accent-foreground',
                className
            )}
            :class="item.disabled ? 'pointer-events-none opacity-50' : ''"
            role="menuitem"
            tabindex="-1"
            {...restProps}
        >
            <div class="flex-1">
                <slot />
            </div>
            
            <template x-if="item.shortcut || shortcut">
                <div class="ml-auto pl-4 text-xs text-muted-foreground" x-text="item.shortcut || shortcut"></div>
            </template>
        </div>
    </template>
  ) : (
    <div
        data-context-menu-item
        @mouseenter="!disabled && (activeIndex = Array.from($el.closest('[role=menu]').querySelectorAll('[data-context-menu-item]')).indexOf($el))"
        :data-active="activeIndex === Array.from($el.closest('[role=menu]').querySelectorAll('[data-context-menu-item]')).indexOf($el)"
        :aria-disabled="disabled"
        class={cn(
            itemVariants({ variant, disabled }),
            'data-[active=true]:bg-accent data-[active=true]:text-accent-foreground',
            className
        )}
        role="menuitem"
        tabindex="-1"
        {...restProps}
    >
        <div class="flex-1">
            <slot />
        </div>
        
        {shortcut && (
            <div class="ml-auto pl-4 text-xs text-muted-foreground">
                {shortcut}
            </div>
        )}
    </div>
  )
}