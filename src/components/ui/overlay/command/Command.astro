---
import MenuContainer from '../menu/MenuContainer.astro';
import { cva, type VariantProps } from 'class-variance-authority';

const commandVariants = cva(
  'flex w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',
  {
    variants: {
      variant: {
        default: 'border border-border shadow-md',
        ghost: 'border-0 shadow-none',
        dialog: 'border-0 shadow-lg'
      },
      size: {
        sm: 'h-60',
        md: 'h-80', 
        lg: 'h-96',
        full: 'h-full'
      }
    },
    defaultVariants: {
      variant: 'default',
      size: 'md'
    }
  }
);

export interface Props extends VariantProps<typeof commandVariants> {
  items?: Record<string, Array<{
    title: string;
    value: string;
    icon?: string; // Icon name (e.g., 'calendar') or SVG string
    shortcut?: string;
    show?: boolean;
    disabled?: boolean;
  }>>;
  placeholder?: string;
  emptyText?: string;
  onSelect?: string;
  class?: string;
  [key: string]: any;
}

const {
  items = {},
  placeholder = 'Type a command or search...',
  emptyText = 'No results found.',
  onSelect = 'console.log(item)',
  variant,
  size,
  class: className,
  ...alpineProps
} = Astro.props;
---

<MenuContainer
  items={items}
  searchEnabled={true}
  keyboardNav={true}
  searchModel="commandSearch"
  activeModel="commandActiveIndex"
  itemsModel="commandItems"
  emptyText={emptyText}
  onSelect={onSelect}
  variant={variant}
  size={size}
  class={className}
  {...alpineProps}
>
  <slot name="input" slot="input" />
  <slot />
  <slot name="footer" slot="footer" />
</MenuContainer>