---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';
import {
  universalVariants,
  type UniversalSpacing,
  type UniversalElevation,
  type UIOverflow,
} from '@/lib/component-variants';
import { X } from 'lucide-astro';
import Text from '@/components/ui/display/Text.astro';

const alertVariants = cva(
  'relative w-full rounded-lg border flex items-start gap-3',
  {
    variants: {
      variant: {
        default: 'bg-primary border-primary text-primary-foreground',
        outline: 'bg-background border-border text-primary',
        destructive: 'bg-background border-destructive text-destructive',
      },
      padding: universalVariants.padding,
      elevation: universalVariants.elevation,
      overflow: universalVariants.overflow,
    },
    defaultVariants: {
      variant: 'default',
      padding: 'md',
      elevation: 'none',
      overflow: 'fixed',
    },
  }
);

export interface Props extends VariantProps<typeof alertVariants> {
  title?: string;
  description?: string;
  icon?: any; // Lucide icon component
  dismissible?: boolean;
  className?: string;
  // Alpine.js pass-through
  [key: string]: any;
}

const { 
  variant = 'default',
  title,
  description,
  icon: IconComponent,
  dismissible = false,
  padding = 'md',
  elevation = 'none',
  overflow = 'fixed',
  className,
  ...alpineProps
} = Astro.props;
---

<!-- 
Universal Alert Component

Usage:
<Alert variant="default" title="Success" description="Your changes have been saved successfully." icon={CheckCircle} dismissible={true} />

<Alert variant="outline" title="Information" icon={Info}>
  <Text variant="alert-description">This is important information.</Text>
</Alert>

<Alert variant="destructive" icon={AlertTriangle}>
  <Text variant="alert-title">Error</Text>  
  <Text variant="alert-description">Something went wrong.</Text>
</Alert>

Variants: default (primary bg), outline (bg with primary text), destructive (bg with danger text)
Features:
- Universal system compliance (padding, elevation, overflow)
- Lucide icon support
- Alpine.js pass-through
- Dismissible functionality
- Text component integration
-->

<div 
  x-data={dismissible ? '{ dismissed: false }' : undefined}
  x-show={dismissible ? '!dismissed' : undefined}
  class={cn(
    alertVariants({ variant, padding, elevation, overflow }),
    className
  )}
  {...alpineProps}
>
  {IconComponent && (
    <div class="flex-shrink-0 w-5 h-5 mt-[2px]">
      <IconComponent class="w-5 h-5" />
    </div>
  )}
  
  <div class="flex-1 min-w-0">
    {title && (
      <Text variant="alert-title" class="mb-1">
        {title}
      </Text>
    )}
    
    {description && (
      <Text variant="alert-description">
        {description}
      </Text>
    )}
    
    {!description && (
      <div class={title ? "[&>*]:text-sm" : ""}>
        <slot />
      </div>
    )}
  </div>
  
  {dismissible && (
    <button 
      @click="dismissed = true"
      class="flex-shrink-0 text-current hover:opacity-70 transition-opacity"
      type="button"
      aria-label="Dismiss alert"
    >
      <X class="w-4 h-4" />
    </button>
  )}
</div>