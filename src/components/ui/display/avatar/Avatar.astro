---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from "@/lib/utils";
import { sizes, shapes, elevationOptions } from '@/lib/component-variants';

const avatarVariants = cva(
  "relative flex shrink-0 overflow-hidden items-center justify-center bg-primary text-primary-foreground",
  {
    variants: {
      size: {
        xs: `${sizes.xs} w-6`,
        sm: `${sizes.sm} w-8`,
        md: `${sizes.md} w-10`,
        lg: `${sizes.lg} w-12`,
        xl: `${sizes.xl} w-14`
      },
      shape: shapes,
      elevation: elevationOptions
    }
  }
);

export interface Props extends VariantProps<typeof avatarVariants> {
  href?: string;
  className?: string;
  [key: string]: any;
}

const { size = 'md', shape = 'rounded', elevation = 'none', className, href, ...alpineProps } = Astro.props;

const Tag = href ? 'a' : 'div';
---

<Tag 
  class={cn(avatarVariants({ size, shape, elevation }), className)}
  {...(href ? { href } : {})}
  {...alpineProps}
>
  <slot />
</Tag>