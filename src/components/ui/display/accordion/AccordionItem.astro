---
import { cn } from '@/lib/utils';
import { cva, type VariantProps } from 'class-variance-authority';
import { semanticVariants, sizes, overflowVariants } from '@/lib/component-variants';

const accordionItemVariants = cva(
  'duration-200 ease-out bg-background border border-border rounded-md cursor-pointer group mb-2',
  {
    variants: {
      variant: {
        default: 'bg-background border-border',
        elevated: 'bg-background border-border shadow-elevated',
        flat: 'bg-background border-border shadow-flat'
      },
      size: sizes,
      overflow: overflowVariants
    }
  }
);

export interface Props extends VariantProps<typeof accordionItemVariants> {
  value?: string;
  variant?: 'default' | 'elevated' | 'flat';
  item?: { id?: string; question?: string; answer?: string };
  class?: string;
  [key: string]: any; // Alpine.js pass-through
}

const {
  value,
  size = 'md',
  variant = 'default',
  overflow = 'fixed',
  item,
  class: className,
  ...alpineProps
} = Astro.props;
---

<div 
  x-data="{ id: $id('accordion') }"
  {...alpineProps}
  :class={`"${cn(
    accordionItemVariants({ size, variant, overflow }),
    className
  )}"`}
  x-cloak
>
  <slot />
</div>