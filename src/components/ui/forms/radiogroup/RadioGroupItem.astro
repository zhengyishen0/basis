---
import { cn } from '@/lib/utils';
import { createUIComponent, type UIComponentProps, type VariantProps } from '@/lib/component-variants';

const radioGroupItemVariants = createUIComponent(
    'radio-option group flex gap-3 p-4 border border-border rounded-lg transition-all duration-300 ease-out transform-gpu hover:border-primary/50 hover:bg-primary/5 has-[:checked]:border-primary has-[:checked]:bg-primary/10',
    {
        variant: {
            default: 'cursor-pointer',
            disabled: 'cursor-not-allowed opacity-50 hover:border-border hover:bg-transparent',
        },
        layout: {
            vertical: 'items-start',
            horizontal: 'items-center',
        }
    }
);

export interface Props extends UIComponentProps, VariantProps<typeof radioGroupItemVariants> {
    value: string;
    disabled?: boolean;
    layout?: 'vertical' | 'horizontal';
    variant?: 'default' | 'disabled';
}

const {
    value,
    disabled = false,
    layout = 'vertical',
    size,
    padding,
    elevation,
    variant,
    class: className,
    ...alpineProps
} = Astro.props;

// Extract x-for and x-key from alpineProps so they don't get passed to the label
const { 'x-for': xFor, 'x-key': xKey, ...restProps } = alpineProps;

// Determine the actual variant based on disabled state
const actualVariant = disabled ? 'disabled' : (variant || 'default');
---

{
    xFor ? (
        <template x-for={xFor} x-key={xKey}>
            <label
                x-data="{ id: $id('radio') }"
                @click="!disabled && !option.disabled && setSelectedOption(option.value)"
                {...restProps}
                class="radio-option group flex gap-3 p-4 border border-border rounded-lg transition-all duration-300 ease-out transform-gpu hover:border-primary/50 hover:bg-primary/5 has-[:checked]:border-primary has-[:checked]:bg-primary/10"
                :class="[
                    option.description ? 'items-start' : 'items-center',
                    (disabled || option.disabled) ? 'cursor-not-allowed opacity-50 hover:border-border hover:bg-transparent' : 'cursor-pointer'
                ]"
                x-cloak
            >
                <!-- Radio input (hidden but functional) -->
                <input
                    type="radio"
                    :name="name"
                    :value="option.value"
                    class="sr-only peer"
                    :disabled="disabled || option.disabled"
                    x-model="selectedOption"
                />
                
                <!-- Radio visual indicator -->
                <div class="radio-input-wrapper relative" :class="option.description ? 'mt-0.5' : ''">
                    <div
                        class="relative flex items-center justify-center shrink-0 transform-gpu rounded-full bg-background transition-all duration-300 ease-out h-5 w-5 border group-hover:border-primary/80"
                        :class="[
                            'border-primary',
                            selectedOption === option.value ? 'border-primary scale-105' : 'border-primary',
                            (disabled || option.disabled) ? 'opacity-50 cursor-not-allowed' : ''
                        ]"
                    >
                        <!-- Radio dot indicator -->
                        <div
                            class="h-3 w-3 bg-primary rounded-full transition-all duration-300 ease-out transform-gpu"
                            :class="selectedOption === option.value ? 'opacity-100 scale-100' : 'opacity-0 scale-0'"
                        >
                        </div>
                    </div>
                </div>

                <!-- Content area -->
                <div class="radio-content flex-1 min-w-0">
                    <slot />
                </div>
            </label>
        </template>
    ) : (
        <label
            x-data="{ id: $id('radio') }"
            @click={`!disabled && setSelectedOption('${value}')`}
            {...restProps}
            class="radio-option group flex gap-3 p-4 border border-border rounded-lg transition-all duration-300 ease-out transform-gpu hover:border-primary/50 hover:bg-primary/5 has-[:checked]:border-primary has-[:checked]:bg-primary/10"
            :class="[
                'items-start',
                disabled ? 'cursor-not-allowed opacity-50 hover:border-border hover:bg-transparent' : 'cursor-pointer'
            ]"
            x-cloak
        >
            <!-- Radio input (hidden but functional) -->
            <input
                type="radio"
                :name="name"
                :value={`'${value}'`}
                class="sr-only peer"
                :disabled="disabled"
                x-model="selectedOption"
            />
            
            <!-- Radio visual indicator -->
            <div class="radio-input-wrapper relative">
                <div
                    class="relative flex items-center justify-center shrink-0 transform-gpu rounded-full bg-background transition-all duration-300 ease-out h-5 w-5 border group-hover:border-primary/80"
                    :class="[
                        'border-primary',
                        selectedOption === '${value}' ? 'border-primary scale-105' : 'border-primary',
                        disabled ? 'opacity-50 cursor-not-allowed' : ''
                    ]"
                >
                    <!-- Radio dot indicator -->
                    <div
                        class="h-3 w-3 bg-primary rounded-full transition-all duration-300 ease-out transform-gpu"
                        :class="selectedOption === '${value}' ? 'opacity-100 scale-100' : 'opacity-0 scale-0'"
                    >
                    </div>
                </div>
            </div>

            <!-- Content area -->
            <div class="radio-content flex-1 min-w-0">
                <slot />
            </div>
        </label>
    )
}