---
// Core components
import { Button } from '../core';

export interface Props {
    title: string;
    titleHighlight: string;
    description: string;
    primaryButtonText: string;
    primaryButtonHref: string;
    secondaryButtonText?: string;
    secondaryButtonHref?: string;
    primaryColor?: 'blue' | 'green' | 'red' | 'yellow' | 'purple';
    imageUrl?: string;
    imageAlt?: string;
    backgroundColor?: string;
    containerMaxWidth?: string;
    showImage?: boolean;
}

const {
    title,
    titleHighlight,
    description,
    primaryButtonText,
    primaryButtonHref,
    secondaryButtonText = 'Learn More',
    secondaryButtonHref = '#',
    primaryColor = 'purple',
    imageUrl,
    imageAlt = 'Hero image',
    backgroundColor = 'bg-white',
    containerMaxWidth = 'max-w-6xl',
    showImage = true,
} = Astro.props;

const highlightColorClasses = {
    blue: 'text-blue-600',
    purple: 'text-purple-600',
    green: 'text-green-600',
    red: 'text-red-600',
    yellow: 'text-yellow-500',
};
---

<section class={`px-2 pt-32 ${backgroundColor} md:px-0`}>
    <div
        class={`container items-center ${containerMaxWidth} px-5 mx-auto space-y-6 text-center`}
    >
        <h1
            class="text-4xl font-extrabold tracking-tight text-left text-gray-900 sm:text-5xl md:text-6xl md:text-center"
        >
            <span class="block"
                >{title}
                <span
                    class={`block mt-1 ${highlightColorClasses[primaryColor]} lg:inline lg:mt-0`}
                    >{titleHighlight}</span
                ></span
            >
        </h1>
        <p
            class="w-full mx-auto text-base text-left text-gray-500 md:max-w-md sm:text-lg lg:text-2xl md:max-w-3xl md:text-center"
        >
            {description}
        </p>
        <div
            class="relative flex flex-col justify-center md:flex-row md:space-x-4"
        >
            <Button
                href={primaryButtonHref}
                variant="solid"
                color={primaryColor}
                size="lg"
                class="mb-3 md:mb-0 md:w-auto"
            >
                {primaryButtonText}
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-5 h-5 ml-1"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <line x1="5" y1="12" x2="19" y2="12"></line>
                    <polyline points="12 5 19 12 12 19"></polyline>
                </svg>
            </Button>
            {
                secondaryButtonText && (
                    <Button
                        href={secondaryButtonHref}
                        variant="soft"
                        color="neutral"
                        size="lg"
                    >
                        {secondaryButtonText}
                    </Button>
                )
            }
        </div>
    </div>

    {
        showImage && imageUrl && (
            <div class="container items-center max-w-4xl px-5 mx-auto mt-16 text-center">
                <slot name="image">
                    <img
                        src={imageUrl}
                        alt={imageAlt}
                        class="w-full h-auto object-cover"
                    />
                </slot>
            </div>
        )
    }
</section>
